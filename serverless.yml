

service: myserverlessprojectchecking

frameworkVersion: "3"

#deploy into lambda
provider:
  name: aws
  runtime: nodejs18.x
  profile: serverlessUserRadha
  environment:
        tableName: ${self:custom.tableName}
  iamRoleStatements:
        - Effect: Allow
          Action:
              - dynamodb:*
          Resource: '*'
  

plugins:
  - serverless-s3-sync
  - serverless-webpack
package:
  individually: true  

custom:
  tableName: checking-table
  s3Sync:
     - bucketName: serverless-user-radha-project-123
       localDir: UploadData  

functions:
  getUser:
    handler: lambda/endpoints/getUser.handler
    events:
        - http:
             path: get-user/{ID}
             method: GET
             cors: true

  getUserAge:
    handler: lambda/endpoints/getUserAge.handler
    events:
        - http:
             path: get-user-age/{ID}
             method: GET
             cors: true


resources:
  Resources:
      DemoBucketUpload:
           Type: AWS::S3::Bucket
           Properties: 
              BucketName: serverless-user-radha-project-123

      MyDynamoDbTable:
            Type: AWS::DynamoDB::Table
            Properties:
                TableName: ${self:custom.tableName}
                AttributeDefinitions:
                    - AttributeName: ID
                      AttributeType: S
                KeySchema:
                    - AttributeName: ID
                      KeyType: HASH
                BillingMode: PAY_PER_REQUEST        

